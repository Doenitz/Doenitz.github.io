[{"title":"小白学ES6（一）","date":"2017-03-19T02:46:58.000Z","path":"2017/03/19/小白学ES6（一）/","text":"ECMAScript 6（以下简称ES6）是JavaScript语言的最新标准，2015年6月正式通过，成为国际通行标准。所以，掌握好ES6的特性，是一个前端应有的品质。 那么首先，我们要从let,var的区别开始讲讲ES6的新特性。众所周知，用var操作符定义的变量将成为定义该变量的作用域中的局部变量。也就是说，如果在函数中使用var定义一个变量，那么这个变量在函数退出后会被销毁，举个例子: 12345function do()&#123; var a=1;&#125;do();alert(a); 它的结果很明显就是这样： 这样看var的作用还是很赞的，但是var本身其实隐藏着一个bug——变量提升（Hoisting）。多说无益，我们从实例中发现问题： 1234&#123; var a=1;&#125;console.log(a); 让我们来猜一猜这串代码的结果，如果泥学过C系语言，你可能会认为var定义了一个局部变量，作用域是代码块内，所以其结果应该是报错（undefined）。但实际结果却是这样: 这就是神奇的变量提升，在JS中，就是把定义在后面的东西（变量或函数）提升到前面中定义。 其作用类似于： 12345var a;&#123; a=1;&#125;console.log(a); 而在ES6中新增了let命令，用来声明变量。它的用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效。例如： 12345&#123; var a=1; let b=2;&#125;console.log(a,b); 结果是这样的： 因此，我们可以知道let并不会像var一样发生变量提升问题。最后要注意一点，let不允许在相同作用域内，重复声明同一个变量。","tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"},{"name":"Javascript","slug":"Javascript","permalink":"http://yoursite.com/tags/Javascript/"},{"name":"ES6","slug":"ES6","permalink":"http://yoursite.com/tags/ES6/"}]},{"title":"日志","date":"2017-03-04T08:50:43.600Z","path":"2017/03/04/日志/","text":"2017年学习计划 &emsp;&emsp;新的一年，新的学期，应该有新的变化与进步，所以要把目标一一罗列出来督促自己： 所有学校科目不挂科 所有等级考试，包括英语和计算机要尽可能高分过 熟练掌握bootstrap，react或者vue 熟练掌握PHP，尽可能学习一种框架 掌握一定的Node.js &emsp;&emsp;现在想到的就这么多，希望自己能在本年末回首的时候，发现这些都已经做完啦！","tags":[{"name":"日志","slug":"日志","permalink":"http://yoursite.com/tags/日志/"}]},{"title":"小白搭博客（一）","date":"2017-03-03T14:21:58.000Z","path":"2017/03/03/小白搭博客（一）/","text":"本人前端小白加学生党一枚，大二才真正开始学习前端知识。因为所学太多，而我记性又不好，所以打算搭建一个blog来记录所学。那为什么要选择Hexo呢？原因如下： 风一般的速度。Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。 流畅的撰写。支持GitHub Flavored Markdown和所有Octopress的插件。 扩展性。Hexo支持EJS、Swig和Stylus，并通过插件支持Haml、Jade和Less。 那么接下来，我们就开始讲解Hexo的搭建过程。 搭建环境准备安装Node.js打开Node.js中文官网http://nodejs.cn/，根据你的系统版本下载相应的安装文件，然后一路默认安装即可。 安装Git打开该网址https://git-for-windows.github.io/，然后根据你的系统版本下载相应Git Bush。 申请GitHub账号打开GitHub官网https://github.com/，申请其账号，并配置好SSH（关于如何配置SSH，详见我的另一篇博客）。 至此，Hexo前期准备工作完成！ 搭建Hexo安装新建一个文件夹，cd进这个文件夹，输入下面的命令来进行安装。 1npm install hexo -g 升级(非必需)更新hexo到最新版。 1npm update hexo -g 初始化在文件夹里右键，点击Git Bush，输入下面的命令。1hexo init 生成网站1hexo generate 或者1hexo g 本地服务器调试在CMD里输入下面的命令。 1hexo server 或者 1hexo s 不出意外，伺服器会跑在 http://localhost:port （port 预设为 4000，可在 _config.yml 设定），打开之后，就能看到Hexo的原始页面啦。 上传GitHub与Coding建立仓库在GitHub上建立一个仓库，其名称必须为your_name.github.io,比如我的是 Doenitz.github.io。同理，在Coding上建立一个仓库，其名称最好为your_name，比如我的是 hitler97。 配置文件打开根目录下的_config.yml，找到Deployment，然后按照如下修改： 123456deploy: type: git repository: github: git@github.com:your_name/your_name.github.io.git coding: git@git.coding.net:your_name/your_name.git branch: master 比如我就按以下形式配置： 123456deploy: type: git repository: github: git@github.com:Doenitz/Doenitz.github.io.git coding: git@git.coding.net:hitler97/hitler97.git branch: master 编写、发布文章打开Git Bush，新建一篇文章： 1hexo new &quot;article title&quot; 这时候在博客目录 \\hexo\\source\\ _posts 下将会看到 article title.md 文件，用MarkDown编辑器编辑好文章之后即可发布文章： 12hexo g // 生成hexo d // 部署 或者 1hexo g -d 这时打开你的Github pages和Coding pages主页地址即可看到自己的博客。这是我的博客http://hitler97.coding.me/ ，如果你喜欢这个风格的话，请继续看我的下一篇博客，教你如何换主题。 参考博客：最简单的Hexo搭建博客教程 手把手教你用Hexo+Github 搭建属于自己的博客 转载请注明原博客地址","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"hello","date":"2017-03-01T12:25:44.000Z","path":"2017/03/01/hello/","text":"&emsp;&emsp;作为一个学生党和前端小白，第一次用hexo+github+coding的模式写了自己的第二个博客（以前“无耻”地使用了配置好的WordPress，最后还是不了了之）。&emsp;&emsp;希望自己以后不忘初心，多来写写编程经验、生活感想。最后，还要谢谢大佬们的光临，如有不对之处，请多多指教。","tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://yoursite.com/tags/杂谈/"}]}]